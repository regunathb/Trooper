<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
    http://www.springframework.org/schema/beans classpath:org/springframework/beans/factory/xml/spring-beans-2.5.xsd	
    http://www.springframework.org/schema/batch classpath:packaged/xsd/spring-batch-2.1.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
    http://www.springframework.org/schema/context classpath:org/springframework/context/config/spring-context-2.5.xsd">

	<!-- Bean for registering the jobs with the JobRegistry. Mandatory bean -->
	<bean class="org.springframework.batch.core.configuration.support.JobRegistryBeanPostProcessor">
		<property name="jobRegistry" ref="jobRegistry"/>
	</bean>		

	<!--
		Configuring the Shell Job Scheduler Bean that will be executed when the trigger fires.
	-->
	<bean name="shellJobDetailBean" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass" value="org.trpr.platform.batch.impl.spring.job.BatchJob" />
		<property name="group" value="sample-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value-ref="shellTaskletsJob" />
				<entry key="jobLocator" value-ref="jobRepository" />
				<entry key="jobLauncher" value-ref="jobLauncher" />
			</map>
		</property>
	</bean>
	
	<!--
		Associating the Shell tasklets Job with a Quartz
		Cron Trigger. Triggers define when a job is executed.
	-->
	<bean id="shellJobCronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="shellJobDetailBean" />
		<property name="cronExpression" value="0 0/120 * * * ?" />
	</bean>

	<!--
		A list of Triggers to be scheduled and executed by Quartz for
	-->
	<bean
		class="org.trpr.platform.batch.impl.spring.web.SchedulerFactoryBean">
		<property name="triggers">
			<list>
				<ref bean="shellJobCronTrigger" />
			</list>
		</property>
	</bean>
	
	<!--
		Shell Batch Job configuration
	-->
	<batch:job id="shellTaskletsJob" incrementer="incrementer">
		<batch:step id="shellStep1" next="shellStep2">
	       <batch:tasklet ref="fileListingScriptBean1"/>
    	</batch:step>
		<batch:step id="shellStep2"  next="emailStep3">
	       <batch:tasklet ref="fileListingScriptBean2"/>
    	</batch:step>
		<batch:step id="emailStep3">
	       <batch:tasklet ref="emailTasklet"/>
    	</batch:step>
	</batch:job>

	<bean id="fileListingScriptBean1" class="org.springframework.batch.core.step.tasklet.SystemCommandTasklet">
		<property name="workingDirectory" value="/etc" />
		<property name="command" value="ls -al" />
		<property name="timeout" value="10000" />
		<property name="terminationCheckInterval" value="2000" />
	</bean>

	<bean id="fileListingScriptBean2" class="org.springframework.batch.core.step.tasklet.SystemCommandTasklet">
		<property name="workingDirectory" value="/etc" />
		<property name="command" value="ls -al" /> <!-- Intentional invalid command to induce step failure -->
		<property name="timeout" value="10000" />
		<property name="terminationCheckInterval" value="2000" />
	</bean>
	
	<bean id="emailTasklet" class="org.trpr.example.batch.email.EmailTasklet">
		<property name="mailSender" ref="mailSender" />
	</bean>

	<bean id="mailSender" class="org.trpr.platform.integration.impl.email.SpringMailSender">
		<property name="mailSender" ref="javaMailSender" />
	</bean>	
	
	<bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    	<property name="host" value="localhost"/>
    	<property name="port" value="25"/>
    	<property name="javaMailProperties">
        	<props>
        		<prop key="mail.debug">true</prop>
        	</props>
    	</property>
	</bean>	

</beans>
